(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{291:function(t,a,s){t.exports=s.p+"assets/img/module.5a78aac0.jpeg"},292:function(t,a,s){t.exports=s.p+"assets/img/dir.ad835b66.jpeg"},293:function(t,a,s){t.exports=s.p+"assets/img/consul1.1c65305e.jpeg"},294:function(t,a,s){t.exports=s.p+"assets/img/config.534617c3.png"},295:function(t,a,s){t.exports=s.p+"assets/img/config_share.35e89977.jpeg"},296:function(t,a,s){t.exports=s.p+"assets/img/instances.00c54e11.jpeg"},297:function(t,a,s){t.exports=s.p+"assets/img/consul2.6f5e571d.jpeg"},410:function(t,a,s){"use strict";s.r(a);var n=s(5),r=Object(n.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("本文以Intellij IDEA创建maven工程的方式实战provider微服务")]),t._v(" "),n("h2",{attrs:{id:"准备工作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#准备工作","aria-hidden":"true"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),n("h3",{attrs:{id:"_1-docker-容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-容器","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. "),n("router-link",{attrs:{to:"/2018/08/24/玩转docker/"}},[t._v("docker & 容器")])],1),t._v(" "),n("h3",{attrs:{id:"_2-consul注册发现服务中心"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-consul注册发现服务中心","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. "),n("router-link",{attrs:{to:"/2018/08/26/服务注册发现consul起步/"}},[t._v("consul注册发现服务中心")])],1),t._v(" "),n("h3",{attrs:{id:"_3-idea安装lombok"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-idea安装lombok","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. IDEA安装lombok")]),t._v(" "),n("p",[t._v("略，见百度")]),t._v(" "),n("h2",{attrs:{id:"实战"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实战","aria-hidden":"true"}},[t._v("#")]),t._v(" 实战")]),t._v(" "),n("h3",{attrs:{id:"_1-创建demo-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建demo-project","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 创建demo project")]),t._v(" "),n("p",[t._v("IDEA->File->New->Project->Empty Project，取名demo，点击finish")]),t._v(" "),n("h3",{attrs:{id:"_2-创建provider-module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建provider-module","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 创建provider module")]),t._v(" "),n("p",[t._v("在IDEA demo project中选择File->New->Module->Spring Initializer->Next")]),t._v(" "),n("p",[t._v("Artifact输入module名字： provider")]),t._v(" "),n("p",[t._v("在Depedencies中选择web中web，Cloud Discovery中Consul Discovery， Ops中选择Actuator")]),t._v(" "),n("p",[n("img",{attrs:{src:s(291),alt:"图片",title:"图片"}})]),t._v(" "),n("p",[t._v("注：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("lombok: 是一个java库，可以自动生成构造函数、get/set函数、日志实例等，具体见： https://www.projectlombok.org")])]),t._v(" "),n("li",[n("p",[t._v("web是spring-boot-starter-web，是rest的spring boot web应用")])]),t._v(" "),n("li",[n("p",[t._v("consul discovery是consul的依赖包")])]),t._v(" "),n("li",[n("p",[t._v("actuator是spring boot提供的特性包，监控管理spring boot应用，其中提供的健康检查api被用于consul健康检查（后续在hystrix熔断中还会用到其它api）")])])]),t._v(" "),n("p",[t._v("最终工程目录结构：")]),t._v(" "),n("p",[n("img",{attrs:{src:s(292),alt:"图片",title:"图片"}})]),t._v(" "),n("h3",{attrs:{id:"_3-实现demo-api接口test"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现demo-api接口test","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 实现demo api接口test")]),t._v(" "),n("h4",{attrs:{id:"（1）实现返回数据结构providerpojo类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（1）实现返回数据结构providerpojo类","aria-hidden":"true"}},[t._v("#")]),t._v(" （1）实现返回数据结构ProviderPOJO类")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("provider")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" lombok"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AllArgsConstructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" lombok"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" lombok"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NoArgsConstructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @Author: yangjianguang\n * @Date: 2018/8/27\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NoArgsConstructor")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AllArgsConstructor")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderPOJO")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("注：这里@Data，@NoArgsConstructor, @AllArgsConstructor都是lombok的注解，@Data提供了get和set方法的自动生成，后两个注解提供构造函数自动生成")]),t._v(" "),n("h4",{attrs:{id:"（2）实现providercontroller类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（2）实现providercontroller类","aria-hidden":"true"}},[t._v("#")]),t._v(" （2）实现ProviderController类")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("provider")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("lombok"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slf4j")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slf4j")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("factory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMapping")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestParam")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestController")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("atomic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicLong")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @Author: yangjianguang\n * @Date: 2018/8/27\n */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicLong")]),t._v(" counter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicLong")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${server.port}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderPOJO")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" defaultValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"provider"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderPOJO")]),t._v(" providerPOJO "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProviderPOJO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("incrementAndGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ProviderController:test(): "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" providerPOJO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" providerPOJO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("注：@Slf4j是lombok提供的日志注解，会自动生成log实例，在上述代码中的log就可以直接用了，非常方便。")]),t._v(" "),n("h3",{attrs:{id:"_4-增加配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-增加配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 增加配置")]),t._v(" "),n("p",[t._v("配置文件：src/main/resources/bootstrap.properties")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("spring.application.name = provider\n\nserver.port = ${PORT:8080}\n\nspring.cloud.consul.enabled = true\nspring.cloud.consul.host = ${CONSUL_HOST:127.0.0.1}\nspring.cloud.consul.port = 8500\nspring.cloud.consul.ribbon.enabled = true\nspring.cloud.consul.discovery.enabled = true\nspring.cloud.consul.discovery.register = true\nspring.cloud.consul.discovery.prefer-ip-address = true\nspring.cloud.consul.discovery.instance-id = ${spring.application.name}:${server.port}\n")])])]),n("p",[t._v("注：这里主要启用了consul配置，并配置了consul的服务器地址和端口。")]),t._v(" "),n("h3",{attrs:{id:"_5-启动本机consul注册发现服务中心"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动本机consul注册发现服务中心","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 启动本机consul注册发现服务中心")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker run --name consul -d -p 8500:8500 -p 8300:8300 -p 8301:8301 -p 8302:8302 -p 8600:8600 consul:1.2.2 agent -dev -bind=0.0.0.0 -client=0.0.0.0\n")])])]),n("p",[t._v("注：关于consul的相关知识见之前文章")]),t._v(" "),n("h3",{attrs:{id:"_6-启动provider应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-启动provider应用","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 启动provider应用")]),t._v(" "),n("h4",{attrs:{id:"（1）查看启动日志："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（1）查看启动日志：","aria-hidden":"true"}},[t._v("#")]),t._v(" （1）查看启动日志：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("2018-08-27 10:16:30.828  INFO 1575 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''\n2018-08-27 10:16:30.838  INFO 1575 --- [           main] o.s.c.c.s.ConsulServiceRegistry          : Registering service with consul: NewService{id='provider-a90a8a71170c52d5fabe90d9cb138dc1-8080', name='provider', tags=[secure=false], address='192.168.30.52', port=8080, enableTagOverride=null, check=Check{script='null', interval='10s', ttl='null', http='http://192.168.30.52:8080/actuator/health', tcp='null', timeout='null', deregisterCriticalServiceAfter='null', tlsSkipVerify=null, status='null'}, checks=null}\n")])])]),n("p",[t._v("可知provider向consul注册时，注册了id为provider-8080，name为provider， ip和端口分别为：192.168.30.52，8080的服务")]),t._v(" "),n("h4",{attrs:{id:"（2）浏览器访问consul管理后台：-http-localhost-8500"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（2）浏览器访问consul管理后台：-http-localhost-8500","aria-hidden":"true"}},[t._v("#")]),t._v(" （2）浏览器访问consul管理后台： http://localhost:8500")]),t._v(" "),n("p",[n("img",{attrs:{src:s(293),alt:"图片",title:"图片"}})]),t._v(" "),n("p",[t._v("发现provider服务已经注册在consul")]),t._v(" "),n("h4",{attrs:{id:"（3）浏览器访问provider的test接口：-http-localhost-8080-test"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（3）浏览器访问provider的test接口：-http-localhost-8080-test","aria-hidden":"true"}},[t._v("#")]),t._v(" （3）浏览器访问provider的test接口： http://localhost:8080/test")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('{"id":765,"name":"hello","port":8080}\n')])])]),n("h3",{attrs:{id:"_7-水平扩展provider微服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-水平扩展provider微服务","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 水平扩展provider微服务")]),t._v(" "),n("h4",{attrs:{id:"（1）更改bootstrap-properties中端口为8081"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（1）更改bootstrap-properties中端口为8081","aria-hidden":"true"}},[t._v("#")]),t._v(" （1）更改bootstrap.properties中端口为8081")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("server.port = ${PORT:8081}\n")])])]),n("h4",{attrs:{id:"（2）更改providerapplication启动配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（2）更改providerapplication启动配置","aria-hidden":"true"}},[t._v("#")]),t._v(" （2）更改ProviderApplication启动配置")]),t._v(" "),n("p",[t._v("右上角勾选Share，不勾选Single instance only\n"),n("img",{attrs:{src:s(294),alt:"图片",title:"图片"}})]),t._v(" "),n("p",[n("img",{attrs:{src:s(295),alt:"图片",title:"图片"}})]),t._v(" "),n("h4",{attrs:{id:"（3）再次运行provider工程-将存在两个provider的两个运行实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（3）再次运行provider工程-将存在两个provider的两个运行实例","aria-hidden":"true"}},[t._v("#")]),t._v(" （3）再次运行provider工程,将存在两个provider的两个运行实例")]),t._v(" "),n("p",[n("img",{attrs:{src:s(296),alt:"图片",title:"图片"}})]),t._v(" "),n("h4",{attrs:{id:"（4）浏览器访问consul管理后台：-http-localhost-8500"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（4）浏览器访问consul管理后台：-http-localhost-8500","aria-hidden":"true"}},[t._v("#")]),t._v(" （4）浏览器访问consul管理后台： http://localhost:8500")]),t._v(" "),n("p",[n("img",{attrs:{src:s(297),alt:"图片",title:"图片"}})]),t._v(" "),n("p",[t._v("这里会发现有两个provider实例，端口分别为8080，8081")]),t._v(" "),n("h4",{attrs:{id:"（5）浏览器访问provider的test接口：-http-localhost-8080-test-或-http-localhost-8081-test"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#（5）浏览器访问provider的test接口：-http-localhost-8080-test-或-http-localhost-8081-test","aria-hidden":"true"}},[t._v("#")]),t._v(" （5）浏览器访问provider的test接口： http://localhost:8080/test  或  http://localhost:8081/test")]),t._v(" "),n("p",[t._v("注：两个provider实例返回的id和port是不同的。")]),t._v(" "),n("h3",{attrs:{id:"_8-todo-见后续文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-todo-见后续文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. Todo(见后续文档)")]),t._v(" "),n("ul",[n("li",[t._v("更换spring boot web默认ServletContainer实现： Tomcat替换为Undertow")]),t._v(" "),n("li",[t._v("替换spring boot默认日志实现： logback替换为log4j2")]),t._v(" "),n("li",[t._v("契约测试")]),t._v(" "),n("li",[t._v("apollo配置")])])])},[],!1,null,null,null);a.default=r.exports}}]);